config {
  type: "table",
  database:"springer-nature-analytics",
  schema:"Collections_KPI_master",
  name:"event_series_snapp_table",
  description:"Data from SNAPP peer review system"
}


WITH SNAPP_collection_events AS (
    SELECT 
      journalID,
      submissionid,
      collectionId as stage_collectionid,
      versionTag,
      revisionVersion,
      amendmentVersion,
      'Initial' as stage,
      CASE 
        WHEN collectionId IS NOT NULL THEN 'True'
        ELSE 'False'
        END as MS_version_in_collection,
      CASE 
        WHEN collectionId IS NOT NULL THEN collectionid
        ELSE NULL
        END as MS_collectionid,
        '' as collectionTitle,
      timestamp
    FROM ${ref("submission_received")}
 
  UNION DISTINCT
    SELECT 
      journalID,
      submissionid,
      collectionId as stage_collectionid,
      versionTag,
      revisionVersion,
      amendmentVersion,
      'Revision' as stage,
      CASE 
        WHEN collectionId IS NOT NULL THEN 'True'
        ELSE 'False'
        END as MS_version_in_collection,
      CASE 
        WHEN collectionId IS NOT NULL THEN collectionid
        ELSE NULL
        END as MS_collectionid,
        '' as collectionTitle,
      timestamp
    FROM ${ref("submission_revision_received")} 
 
  UNION DISTINCT
    SELECT
      journalID,
      submissionid,
      collectionId as stage_collectionid,
      versionTag,
      revisionVersion,
      amendmentVersion,
      'Amendment' as stage,
      CASE 
        WHEN collectionId IS NOT NULL THEN 'True'
        ELSE 'False'
        END as MS_version_in_collection,
      CASE 
        WHEN collectionId IS NOT NULL THEN collectionid
        ELSE NULL
        END as MS_collectionid,
        '' as collectionTitle,
      timestamp
    FROM ${ref("submission_change_received")}
 
  UNION DISTINCT
    SELECT
      journalID,
      submissionid,
      collectionId as stage_collectionid,
      versionTag,
      revisionVersion,
      amendmentVersion,
      'Collection assigned' as stage,
      'True' as MS_version_in_collection,
      collectionId as MS_collectionid,
      collectionTitle,
      timestamp
    FROM ${ref("collection_assigned")}
 
  UNION DISTINCT
    SELECT
      journalID,
      submissionid,
      collectionId as stage_collectionid,
      versionTag,
      revisionVersion,
      amendmentVersion,
      'Collection unassigned' as stage,
      'False'as MS_version_in_collection,
      NULL as MS_collectionid,
      collectionTitle,
      timestamp
    FROM ${ref("collection_unassigned")} )
,
SNAPP_collection_events_with_initial_sub AS (
    SELECT 
      sce.*,
      ROW_NUMBER() OVER(PARTITION BY sce.submissionId ORDER BY sce.timestamp DESC) row_no,
      DATE(isv.timestamp) as initial_submission_date,
      isv.title as MS_title,
      isv.articleTypeId
    FROM SNAPP_collection_events as sce
    LEFT JOIN ${ref("submission_received")} as isv on sce.submissionid = isv.submissionid
)


SELECT * 
FROM SNAPP_collection_events_with_initial_sub
ORDER BY submissionid,row_no desc
