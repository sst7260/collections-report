
config {
  type: "table",
  database:"springer-nature-analytics",
  schema:"Collections_KPI_dev",
  name:"collection_report_transformed",
  description:"transformed collections data"
}



-- Collections metadata
with collections_api AS (
  SELECT * 
  From ${ref('collections')} left join unnest(journalIds) jrnl_id left join unnest(journals) jrnl_title
)

-- SNAPP & EM submissions enriched with Journal & Collections metadata

,submissions_with_collections_api_data AS (
  SELECT snm.*,snm.decision_status as main_decision_status,
  col_api.hasArticles, 
  COALESCE(col_api2.startDate,col_api.startDate) as CT_startDate, 
  COALESCE(col_api2.endDate,col_api.endDate) as CT_endDate, 
  COALESCE(main_collectionid,col_api2.id,col_api.id) as CT_collectionid,
  COALESCE(col_api2.plainTextTitle,col_api.plainTextTitle,snm.collectionTitle_1,snm.main_collectionId) AS main_collectionTitle,
  -- CASE WHEN col_api.plainTextTitle is NOT NULL THEN col_api.plainTextTitle 
  -- WHEN col_api.plainTextTitle is NULL and swjd.collectionTitle_1 is NOT NULL THEN swjd.collectionTitle_1 
  -- WHEN col_api.plainTextTitle is NULL and swjd.collectionTitle_1 is NULL THEN swjd.main_collectionId 
  -- ELSE col_api.plainTextTitle END AS main_collectionTitle,
  DATE(col_api.publicationDateTime) AS pub_date_1, 
  COALESCE(col_api.status,col_api2.status) main_coll_status,
  COALESCE(col_api2.jrnl_id,col_api.jrnl_id,snm.journalId) as alt_jrnl_key,
  COALESCE(col_api2.jrnl_title,col_api.jrnl_title) as alt_jrnl_title

  From ${ref("merged_peer_review_systems")} as snm
  Full Outer Join collections_api col_api
  On snm.main_collectionid = col_api.id
  left join collections_api col_api2
  On snm.main_collectionid = col_api2.id
  or snm.collectionTitle_1 = col_api2.plainTextTitle 
  --where main_collectionid=id or data_source='EM'
) 



-- Journal Metadata
, tbl_Journals AS (
  Select * FROM ${ref("tbl_Journals")}
)


-- SNAPP & EM submissions data enriched with Journal metadata
, submissions_with_journal_data AS (
  Select swcd.*, 
  tblj.JournalKey,
  tblj.JournalTitle,
  tblj.JournalReportingKey, 
  tblj.JournalStatus, 
  tblj.JournalBusinessModel, 
  tblj.JournalPDDesc, 
  tblj.JournalPSDesc, 
  tblj.JournalPUDesc, 

  tblj2.JournalKey as all_journal_key,
  tblj2.JournalTitle as all_journal_title

  From submissions_with_collections_api_data as swcd
  Left Join tbl_Journals as tblj
  On swcd.journalId = tblj.JournalKey
  Left Join tbl_Journals as tblj2
  On swcd.alt_jrnl_key = tblj2.JournalKey
  or swcd.alt_jrnl_title = tblj2.JournalTitle
)


,Launch_date_first_collection_updated  AS (
  SELECT *
  FROM ${ref("Launch_date_first_collection_updated")}
)



,final_transf As (
  SELECT swjd.* 
  ,ldfc.Launch_date_of_the_first_collection_launched_by_CA_team as launch_dt_first_collection,
row_number() over(Partition by submissionid,CT_collectionid order by submissionid) row_num_coll_id,
  count(*) over (Partition by submissionid) cnt2
  ,mtp.ms_doi
  FROM submissions_with_journal_data swjd
  LEFT JOIN ${ref("manuscript_to_publication")} mtp
  ON swjd.submissionid = mtp.internal_submission_id
  LEFT JOIN Launch_date_first_collection_updated ldfc
  ON swjd.JournalKey=ldfc.Journal_title_number
)


, usage_with_final_transf as (
  SELECT ft.*
  ,rcp.*
  ,COALESCE(ft.ms_doi,rcp.DOI) as main_doi
  ,COALESCE(ft.main_collectionid,rcp.collection_id,ft.CT_collectionid,ft.main_collectionTitle,rcp.Published_ArticleCollectionTitle) filter_coll_id
  ,COALESCE(ft.main_collectionTitle,rcp.Published_ArticleCollectionTitle) filter_coll_title
  ,COALESCE(ft.JournalTitle,rcp.journal_title) filter_journal_title
  From final_transf ft
  Full outer join ${ref("reporting_coll_publications")} rcp
  On ft.ms_doi = rcp.DOI
)

Select usft.*,
CASE
WHEN CT_startDate>= launch_dt_first_collection and first_submission_dt>= launch_dt_first_collection THEN 'CA launched collection and CA sub'
WHEN CT_startDate< launch_dt_first_collection and first_submission_dt>= launch_dt_first_collection THEN 'CA managed collection and CA sub'
ELSE 'Not managed by CA'
END as CA_team_management_status

,CASE When ms_doi is not null then 'submission driven'
When ms_doi is null and DOI is not null then 'post publication collection' end as publication_type

,COALESCE(aoat.dds_subscription_model,'Unknown') as subscription_model

,CASE When count(distinct filter_journal_title) over(Partition by filter_coll_title)>1 Then 'multi-journal' else 'non multi-journal' end as multi_journal_collection

,CASE When count(distinct main_doi ) over(Partition by filter_coll_title,author_name)>1 Then 'repeated' else 'not repeated' end as authorship_in_collections 

from usage_with_final_transf usft
Left JOIN ${ref("article_oa_type")} aoat
On usft.main_doi = aoat.dds_doi
--where row_num_coll_id=1 



